type TagsModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  tag: String
  postmodelID: ID! @index(name: "byPostModel")
  usermodels: [UserModel] @manyToMany(relationName: "UserModelTagsModel")
  postmodels: [PostModel] @manyToMany(relationName: "PostModelTagsModel")
}

type BlackListedPosts @model @auth(rules: [{allow: public}]) {
  id: ID!
  post_id: String
  usermodelID: ID! @index(name: "byUserModel")
}

type SavedPosts @model @auth(rules: [{allow: public}]) {
  id: ID!
  post_id: String
  usermodelID: ID! @index(name: "byUserModel")
}

type PostModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  usermodelID: ID! @index(name: "byUserModel")
  TagsModels: [TagsModel] @manyToMany(relationName: "PostModelTagsModel")
  title: String
  description: String
  link: String
}

type UserModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  user_name: String
  UsersPosts: [PostModel] @hasMany(indexName: "byUserModel", fields: ["id"])
  UsersSavedPosts: [PostModel] @hasMany(indexName: "byUserModel", fields: ["id"])
  UsersBlackListedPosts: [PostModel] @hasMany(indexName: "byUserModel", fields: ["id"])
  TagsModels: [TagsModel] @manyToMany(relationName: "UserModelTagsModel")
}
 